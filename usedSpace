#!/bin/bash
# USAGE: usedSpace mountpoint
# EXAMPLE: usedSpace /
# DESCRIPTION:
#	This script will go and find large files on the specified filesystem,
#	then report back the largest files it had found in a nice looking
#	format. Admittedly, I no longer remember where I got the perl code 
# 	from, but here it is, slightly modified. The default minimum size
#	it will report right now is 100MB, but that can be easily modified.
#
#	EXAMPLE OUTPUT:
#
#	[kris@crunk CrunkTools]$ ./usedSpace /home
#   4.3	G	   **********************  /home/kris/VirtualBox VMs/lucy/lucy-disk1.vmdk
#   4.3	G	   **********************  /home/kris/VirtualBox VMs/lucy/lucy-disk1_1.vmdk
# 939.4	M	     ********************  /home/kris/Pictures/weddingpics2.zip
# 779.5	M	     ********************  /home/kris/Pictures/weddingpics1.zip
# 263.6	M	       ******************  /home/kris/kvm/junos/junos-vsrx-12.1X47-D20.7-domestic-1425440825/junos-vsrx-12.1X47-D20.7-domestic.img
# 259.1	M	       ******************  /home/kris/Downloads/unsorted/fedora-23-remix-rpi2-minimal-1.raw.xz
# 225.0	M	       ******************  /home/kris/virtualmachines/junos-vsrx/junos-vsrx-12.1X47-D20.7-domestic-disk1.vmdk
# 222.5	M	       ******************  /home/kris/kvm/junos/junos-vsrx-12.1X47-D20.7-domestic.jva
# 211.4	M	       ******************  /home/kris2/Dropbox/sounds/hydrogen/libraries/BigMono.tar
# 196.3	M	       ******************  /home/kris/sounds/startrek.zip
#
#
# TODO:
# 	* Usage
#	* Take a value in multiplier value for find command and convert
#	  to raw value for compatibility
#		** The find utility sometimes only accepts a value in "units"
#		with no allowable multiplier.
#
# KNOWN BUGS:
#	* If you find that this script does not work, take the +100M value and 
#	  convert it to "units", removing the "M". I'm still trying to find out
#	  what a "unit" is.
#
#	  Rough, bad example: find $1 -mount -size +100M turns into 
#	  find $1 -mount -size 100000
#
#

find $1 -mount -size +100M -printf '%k %p\n' 2> /dev/null | sort -nr | perl -ne 'if ( /^(\d+)\s+(.*$)/){$l=log($1+.1);$m=int($l/log(1024)); printf  ("%6.1f\t%s\t%25s  %s\n",($1/(2**(10*$m))),(("K","M","G","T","P")[$m]),"*"x (1.5*$l),$2);}'
