#!/usr/bin/env bash
# USAGE: watchFreeSpace
#
# TODO:
#	* Execute stuff when free space hits a threshold
#	* Trending to figure out when space will be free
#	* Usage
#	* Show changes under 1MB
#	* Print columns consistently aligned
#		** Large changes in size can screw up alignment
#	* Allow a program to be executed when a threshold is met			
#		** Handle timeout
#		** Multiple alert suppression

SLEEPTIME=10
MOUNTPOINT=/home

if [ -n "$1" ]; then
   MOUNTPOINT=$1

   if [ -n "$2" ]; then
      SLEEPTIME=$2
   fi
fi


tcurrentFreetgrn='\e[0;32m' # Green
tcurrentFreetred='\e[0;31m' # Red
tcurrentFreetrst='\e[0m'    # Reset

lastFree=0

echo "Delay between polls is $SLEEPTIME. We're watching $MOUNTPOINT"

while true; do
   dfOut=$(df -P $MOUNTPOINT | tail -n1)
   percentUsed=$(echo $dfOut | awk '{print $5}')
   let currentFree="`echo $dfOut | awk '{print $4}'`/1024"
   #echo -e "lastFree: $currentFree\tcurrentFree: $lastFree"
   if [ "$lastFree" -ne "0" ]; then
      if [ "$lastFree" -eq "$currentFree" ]; then
            echo -ne "No changes\t\t\t\t"
      else
         if [ "$lastFree" -lt "$currentFree" ]; then
            let z="currentFree-lastFree"
            echo -ne "${tcurrentFreetgrn}+ $z MB has been freed${tcurrentFreetrst}\t\t\t"
         else
            let z="lastFree-currentFree"
            echo -ne "${tcurrentFreetred}- $z MB has been used${tcurrentFreetrst}\t\t\t"
         fi
      fi
   fi
   let lastFree=currentFree
   echo "$currentFree MB free, $percentUsed used"
   sleep $SLEEPTIME
done

